{"ast":null,"code":"var _jsxFileName = \"/home/jac/Documents/ctp/learn-react-1/src/BoardSwitcher.jsx\";\nimport React from 'react';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentSelector: 0\n    };\n  }\n\n  handleTog(event) {\n    if (this.state.currentSelector < this.props.numBoards - 1) this.setState({\n      currentSelector: this.state.currentSelector + 1\n    });else this.setState({\n      currentSelector: 0\n    });\n  } // the plus one for index is for users\n  // who arent aware of zero index\n\n\n  render() {\n    let className = \"board\";\n\n    if (this.props.selected) {\n      className += \" selected\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, this.props.index + 1);\n  }\n\n} // index and selected arent important words unlike key\n// which is used to differentiate different boards\n// when your using an array with the same elements\n// you have to give a key \n\n\nclass BoardSwitcher extends React.Component {\n  render() {\n    let boards = [];\n\n    for (let ii = 0; ii < this.props.numBoards; ii++) {\n      let isSelected = ii === 0;\n      boards.push( /*#__PURE__*/React.createElement(Board, {\n        index: ii,\n        selected: isSelected,\n        key: ii,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, boards), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: event => this.handleTog(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Toggle\"));\n  }\n\n}\n\nexport default BoardSwitcher;","map":{"version":3,"sources":["/home/jac/Documents/ctp/learn-react-1/src/BoardSwitcher.jsx"],"names":["React","Board","Component","state","currentSelector","handleTog","event","props","numBoards","setState","render","className","selected","index","BoardSwitcher","boards","ii","isSelected","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,eAAe,EAAE;AADX,KAD0B;AAAA;;AAKlCC,EAAAA,SAAS,CAACC,KAAD,EAAO;AACd,QAAI,KAAKH,KAAL,CAAWC,eAAX,GAA6B,KAAKG,KAAL,CAAWC,SAAX,GAAqB,CAAtD,EACI,KAAKC,QAAL,CAAc;AAACL,MAAAA,eAAe,EAAG,KAAKD,KAAL,CAAWC,eAAX,GAA2B;AAA9C,KAAd,EADJ,KAGM,KAAKK,QAAL,CAAc;AAACL,MAAAA,eAAe,EAAE;AAAlB,KAAd;AACP,GAViC,CAWlC;AACA;;;AACAM,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,OAAhB;;AACA,QAAI,KAAKJ,KAAL,CAAWK,QAAf,EAAyB;AACvBD,MAAAA,SAAS,IAAI,WAAb;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWM,KAAX,GAAmB,CADtB,CADF;AAKD;;AAvBiC,C,CA0BpC;AACA;AACA;AACA;;;AACA,MAAMC,aAAN,SAA4Bd,KAAK,CAACE,SAAlC,CAA4C;AAC1CQ,EAAAA,MAAM,GAAG;AACP,QAAIK,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,KAAKT,KAAL,CAAWC,SAAjC,EAA4CQ,EAAE,EAA9C,EAAkD;AAChD,UAAIC,UAAU,GAAGD,EAAE,KAAK,CAAxB;AACAD,MAAAA,MAAM,CAACG,IAAP,eACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,EAAd;AAAkB,QAAA,QAAQ,EAAEC,UAA5B;AAAwC,QAAA,GAAG,EAAED,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,MAAzB,CADF,eAEE;AAAQ,MAAA,OAAO,EAAKT,KAAD,IAAW,KAAKD,SAAL,CAAeC,KAAf,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAhByC;;AAmB5C,eAAeQ,aAAf","sourcesContent":["import React from 'react';\n\n\nclass Board extends React.Component {\n  state = {\n    currentSelector: 0,\n  }\n\n  handleTog(event){\n    if (this.state.currentSelector < this.props.numBoards-1)\n        this.setState({currentSelector:  this.state.currentSelector+1})\n        else \n          this.setState({currentSelector: 0})\n  } \n  // the plus one for index is for users\n  // who arent aware of zero index\n  render() {\n    let className = \"board\";\n    if (this.props.selected) {\n      className += \" selected\";   \n    }\n    return (\n      <div className={className}>\n        {this.props.index + 1}\n      </div>\n    );\n  }\n}\n\n// index and selected arent important words unlike key\n// which is used to differentiate different boards\n// when your using an array with the same elements\n// you have to give a key \nclass BoardSwitcher extends React.Component {\n  render() {\n    let boards = [];\n    for (let ii = 0; ii < this.props.numBoards; ii++) {\n      let isSelected = ii === 0;\n      boards.push(\n        <Board index={ii} selected={isSelected} key={ii} />\n      );\n    }\n    \n    return (\n      <div>\n        <div className=\"boards\">{boards}</div>\n        <button onClick= { (event) => this.handleTog(event) }>Toggle</button>\n      </div>\n    );\n  }\n}\n\nexport default BoardSwitcher;\n"]},"metadata":{},"sourceType":"module"}