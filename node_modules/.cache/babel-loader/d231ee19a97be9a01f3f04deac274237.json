{"ast":null,"code":"var _jsxFileName = \"/home/jac/Documents/ctp/learn-react-1/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BoardSwitcher from './BoardSwitcher';\nimport './index.css';\n/* {} brackets for comments when inside reactDom.render\n  need to wrap elements can be div or enpty brackets \n  also read from bottom up for react code dom is document \n  object model basically the hmtl tag higharcy react has \n  virtual dom react itmanipulates the dom as user interacts\n  with website. react was created to fix the issue with \n  auto scroll when things where loaded onto the web pg \n  causing it to be written to the dom even when content\n  wasnt on screen yet which affected performance that is \n  why the virtual dom was crated to handle the rendering \n  of content not on pg that is written to dom. dont use \n  jquery for dynamic websites also it doesnt have virtual\n   dom but is still usefull outside of those dynamic sites \n   in fact jquery was created to access the dom initially \n   to strandardize things. react can be reused to build \n   desktop apps and mobile like slack desktop app.\n  \n  */\n// props is amutable meaning it cant be changed once it\n// is been declared in one part of code\n//  function Student(props) {\n//  props.name= \"kiing\"; you will get error\n//   return <div>- {props.name}, attends {props.college} </div>;\n// }\n// or do deconstruction use className for css\n// this is still all javascript(JSX)\n// function Student({name, college}) {\n//   return <div className=\"red-text\">- {name}, attends {college} </div>;\n// }\n//another component call\n// this is a function call\n// Student({});\n// not function call, declaring element to component\n// <Student name=\"jl\"/>\n// function Welcome() {\n//   return (\n//     <div>\n//       <h1>Welcome CTP Class</h1>\n//       <p>Who is in class?</p>\n//       <Student name=\"John\" college=\"NYU\" /> \n//       <Student name=\"Jack\" college=\"NYCT\" /> \n//       <Student name=\"Jeff\" college=\"BC\" /> \n//     </div>\n//   );\n// }\n\n/* \n  Welcome is a componet being called in render\n  it is thr function above must be capital and \n  react is top bottom\n  props can be passed here\n    <Welcome secret=\"foo\" />,\n\n  */\n// ReactDOM.render(\n//   <Welcome />,\n//   document.getElementById(\"root\")\n// );\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"The button has been clicked 0 times\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, this.state.isToggleOn ? 'ON' : 'OFF'));\n  }\n\n} // ReactDOM.render(\n//   <App />,\n//   document.getElementById(\"root\")\n// );\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(BoardSwitcher, {\n  numBoards: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/jac/Documents/ctp/learn-react-1/src/index.js"],"names":["React","ReactDOM","BoardSwitcher","App","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,aAAP;AAEA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;;;;;;;;AAQA;AAEA;AACA;AACA;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAIjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,KAAL,CAAnB;AAGD;;AACDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADhC,CAFF,CADF;AAOD;;AAvB+B,C,CA0BlC;AACA;AACA;AACA;;;AAEAP,QAAQ,CAACW,MAAT,eACE,oBAAC,aAAD;AAAe,EAAA,SAAS,EAAE,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BoardSwitcher from './BoardSwitcher';\nimport './index.css'\n\n/* {} brackets for comments when inside reactDom.render\n  need to wrap elements can be div or enpty brackets \n  also read from bottom up for react code dom is document \n  object model basically the hmtl tag higharcy react has \n  virtual dom react itmanipulates the dom as user interacts\n  with website. react was created to fix the issue with \n  auto scroll when things where loaded onto the web pg \n  causing it to be written to the dom even when content\n  wasnt on screen yet which affected performance that is \n  why the virtual dom was crated to handle the rendering \n  of content not on pg that is written to dom. dont use \n  jquery for dynamic websites also it doesnt have virtual\n   dom but is still usefull outside of those dynamic sites \n   in fact jquery was created to access the dom initially \n   to strandardize things. react can be reused to build \n   desktop apps and mobile like slack desktop app.\n  \n  */ \n// props is amutable meaning it cant be changed once it\n// is been declared in one part of code\n//  function Student(props) {\n//  props.name= \"kiing\"; you will get error\n//   return <div>- {props.name}, attends {props.college} </div>;\n// }\n\n// or do deconstruction use className for css\n// this is still all javascript(JSX)\n// function Student({name, college}) {\n//   return <div className=\"red-text\">- {name}, attends {college} </div>;\n// }\n//another component call\n\n// this is a function call\n// Student({});\n// not function call, declaring element to component\n// <Student name=\"jl\"/>\n// function Welcome() {\n//   return (\n//     <div>\n//       <h1>Welcome CTP Class</h1>\n//       <p>Who is in class?</p>\n//       <Student name=\"John\" college=\"NYU\" /> \n//       <Student name=\"Jack\" college=\"NYCT\" /> \n//       <Student name=\"Jeff\" college=\"BC\" /> \n\n//     </div>\n//   );\n// }\n/* \n  Welcome is a componet being called in render\n  it is thr function above must be capital and \n  react is top bottom\n  props can be passed here\n    <Welcome secret=\"foo\" />,\n\n  */\n// ReactDOM.render(\n  \n//   <Welcome />,\n//   document.getElementById(\"root\")\n// );\n\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n  render() {\n    return (\n      <div>\n        <p>The button has been clicked 0 times</p>\n        <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'ON' : 'OFF'}</button>\n      </div>\n    );\n  }\n}\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById(\"root\")\n// );\n\nReactDOM.render(\n  <BoardSwitcher numBoards={3} />,\n  document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}